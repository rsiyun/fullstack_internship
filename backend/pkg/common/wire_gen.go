// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package common

import (
	"api-money-management/internal/handlers"
	"api-money-management/internal/repositories"
	"api-money-management/internal/services"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from injector.go:

func InjectDependencies(db *gorm.DB) (*Handler, error) {
	authRepository := repositories.NewAuthRepository(db)
	authService := services.NewAuthService(authRepository)
	authHandler := handlers.NewAuthHandler(authService)
	walletRepository := repositories.NewWalletRepository(db)
	walletService := services.NewWalletService(walletRepository)
	walletHandler := handlers.NewWalletHandler(walletService)
	handler := &Handler{
		AuthHandler:   authHandler,
		WalletHandler: walletHandler,
	}
	return handler, nil
}

// injector.go:

var repositorySet = wire.NewSet(repositories.NewAuthRepository, repositories.NewWalletRepository)

var serviceSet = wire.NewSet(services.NewAuthService, services.NewWalletService)

var handlerSet = wire.NewSet(handlers.NewAuthHandler, handlers.NewWalletHandler)

type Handler struct {
	AuthHandler   *handlers.AuthHandler
	WalletHandler *handlers.WalletHandler
}
